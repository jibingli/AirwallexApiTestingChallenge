{
  "stats": {
    "suites": 2,
    "tests": 46,
    "passes": 34,
    "pending": 0,
    "failures": 12,
    "start": "2019-09-03T05:47:01.420Z",
    "end": "2019-09-03T05:47:28.870Z",
    "duration": 27450,
    "testsRegistered": 46,
    "passPercent": 73.91304347826086,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "716ba4b9-6a6b-48d9-b07e-191ac30603f2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d224e435-1e1f-4e5d-9eac-f40ead871e54",
          "title": "Customers Info Tests",
          "fullFile": "/Users/jibing/servicetesting/test/bank.test.js",
          "file": "/test/bank.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
              "title": "collect customers bank info tests",
              "fullFile": "/Users/jibing/servicetesting/test/bank.test.js",
              "file": "/test/bank.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "post /bank should be success when LOCAL US with valid data without optional",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL US with valid data without optional",
                  "timedOut": false,
                  "duration": 510,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "844071ee-ae22-4f6c-83bd-e0ae3ee4a0ca",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when account_name 2",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when account_name 2",
                  "timedOut": false,
                  "duration": 499,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "c10a9de5-d2c1-4e23-b762-0cf9cc0fb342",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when account_name 10",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when account_name 10",
                  "timedOut": false,
                  "duration": 776,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "9bdfe75d-a206-477c-a1a2-2b49642fa822",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when US and account_number 1",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when US and account_number 1",
                  "timedOut": false,
                  "duration": 548,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "c4b3075d-9a22-4943-89a7-79916a35c22c",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when US and account_number 17",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when US and account_number 17",
                  "timedOut": false,
                  "duration": 417,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "33e34a42-6343-46a3-ad65-9b19f5ffb939",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL US with valid data and optional bsb & swift_code",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL US with valid data and optional bsb & swift_code",
                  "timedOut": false,
                  "duration": 509,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "0de5ca1f-5578-4738-9ed4-01bfd06072e2",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL AU with valid data without optional",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL AU with valid data without optional",
                  "timedOut": false,
                  "duration": 417,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "7aa9e58f-b155-4ca6-b9e9-5970e215632e",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL AU and account_number 6",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL AU and account_number 6",
                  "timedOut": false,
                  "duration": 426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "73c1c576-61aa-438a-8256-919c068e8e0f",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL AU and account_number 9",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL AU and account_number 9",
                  "timedOut": false,
                  "duration": 438,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "4d1c2b9b-13a7-4a22-b8db-954183a73305",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL AU with valid data with optional swift_code & aba",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL AU with valid data with optional swift_code & aba",
                  "timedOut": false,
                  "duration": 1477,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "b1a055bf-04fa-440b-b496-eb0ef2d2afc4",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL CN with valid data without optional",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL CN with valid data without optional",
                  "timedOut": false,
                  "duration": 924,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 200 \"OK\", got 400 \"Bad Request\"",
                    "estack": "Error: expected 200 \"OK\", got 400 \"Bad Request\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "729c439e-a510-4f20-8b46-fc4e79630a57",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when CN and account_number 8",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when CN and account_number 8",
                  "timedOut": false,
                  "duration": 511,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "ce1d81bc-63f8-420e-98c8-b96fd37ed75c",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when CN and account_number 20",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when CN and account_number 20",
                  "timedOut": false,
                  "duration": 817,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 200 \"OK\", got 400 \"Bad Request\"",
                    "estack": "Error: expected 200 \"OK\", got 400 \"Bad Request\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "ab3756a6-b4e0-4109-8e53-99656a055331",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when LOCAL CN with valid data and optional bsb & aba & swift_code ",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when LOCAL CN with valid data and optional bsb & aba & swift_code ",
                  "timedOut": false,
                  "duration": 824,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "0a744d75-7ec4-4acd-9a33-7baa17547580",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT US with swift_code 8",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT US with swift_code 8",
                  "timedOut": false,
                  "duration": 504,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "55bbcfd4-00a9-4e46-b8f7-2cf53c53e4e7",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT US with swift_code 11",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT US with swift_code 11",
                  "timedOut": false,
                  "duration": 814,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "49532b00-da42-4df7-9205-b8e58dc0bdd5",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT US with optional bsb",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT US with optional bsb",
                  "timedOut": false,
                  "duration": 511,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "31ef4e7e-0cd9-4312-affc-cb516b84dbd6",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT AU with swift_code 8",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT AU with swift_code 8",
                  "timedOut": false,
                  "duration": 447,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "efab89da-ca72-4646-91bd-d59b20f0a698",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT AU with optional aba",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT AU with optional aba",
                  "timedOut": false,
                  "duration": 434,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "a0875924-e29f-48a2-a73d-c0f0a6f2c1a4",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT CN with swift_code 11",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT CN with swift_code 11",
                  "timedOut": false,
                  "duration": 779,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 200 \"OK\", got 400 \"Bad Request\"",
                    "estack": "Error: expected 200 \"OK\", got 400 \"Bad Request\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "2e2e77e3-d61f-4d71-b1ac-2607ea6d2a05",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be success when SWIFT CN with optional aba & bsb",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be success when SWIFT CN with optional aba & bsb",
                  "timedOut": false,
                  "duration": 587,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 200 \"OK\", got 400 \"Bad Request\"",
                    "estack": "Error: expected 200 \"OK\", got 400 \"Bad Request\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "d66f7736-7bb9-4864-952d-80bc8782418d",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when US but no aba ",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when US but no aba ",
                  "timedOut": false,
                  "duration": 821,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 400 \"Bad Request\", got 200 \"OK\"",
                    "estack": "Error: expected 400 \"Bad Request\", got 200 \"OK\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:716:12)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "62923895-4db7-475c-8d23-db9954acc6dc",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when LOCAL US with no account_name",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when LOCAL US with no account_name",
                  "timedOut": false,
                  "duration": 423,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "09c288bc-3518-4527-981d-cced219893cd",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when AU but no bsb",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when AU but no bsb",
                  "timedOut": false,
                  "duration": 491,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "4fe9c916-8b31-4157-8905-1ad9c55a88fc",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when LOCAL AU but no account_number",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when LOCAL AU but no account_number",
                  "timedOut": false,
                  "duration": 515,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "55f5a6e0-ae58-419a-a58e-20946b3eeebb",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when LOCAL but no bank_country_code",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when LOCAL but no bank_country_code",
                  "timedOut": false,
                  "duration": 825,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "161d26c1-68d7-45d4-bf1a-c459c8fed282",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when no payment_method",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when no payment_method",
                  "timedOut": false,
                  "duration": 605,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "6bf3bc6b-37af-40e3-be42-ec4af4d47d94",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when SWIFT but no swift_code",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when SWIFT but no swift_code",
                  "timedOut": false,
                  "duration": 512,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "438f5902-2266-4179-929b-68f2a6f94847",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when SWIFT but swift_code is null",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when SWIFT but swift_code is null",
                  "timedOut": false,
                  "duration": 813,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "646ac867-a19b-429a-a4c2-326cc2111270",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when SWIFT but swift_code is invaild",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when SWIFT but swift_code is invaild",
                  "timedOut": false,
                  "duration": 613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "0980957e-71f8-4fcf-b3ec-c1b6e219deae",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when US SWIFT but swift_code not US",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when US SWIFT but swift_code not US",
                  "timedOut": false,
                  "duration": 454,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "7bd5285f-572c-404a-b6a5-1d874e8ad5af",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when SWIFT but swift_code 5",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when SWIFT but swift_code 5",
                  "timedOut": false,
                  "duration": 572,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "ed46623d-b505-449d-9a7f-eab8a4271688",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when payment_method is invalid",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when payment_method is invalid",
                  "timedOut": false,
                  "duration": 518,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "e888ca96-4dd9-4677-ac49-db19f0508327",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when bank_country_code is invalid",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when bank_country_code is invalid",
                  "timedOut": false,
                  "duration": 425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "7ebfe34a-054b-4618-b2fd-cf7b204ac679",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when account_name 1",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when account_name 1",
                  "timedOut": false,
                  "duration": 484,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "f9384911-3e44-4c70-9e2f-831dd617ce17",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when account_name 11",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when account_name 11",
                  "timedOut": false,
                  "duration": 527,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "46992450-45c2-4a9c-bce9-aca1b735a8e3",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when US account_number 0",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when US account_number 0",
                  "timedOut": false,
                  "duration": 510,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "be64b545-3755-4512-b986-9049bef09513",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be message Length of account_number should be between 1 and 17 when bank_country_code is 'US' when US account_number 18",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be message Length of account_number should be between 1 and 17 when bank_country_code is 'US' when US account_number 18",
                  "timedOut": false,
                  "duration": 505,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected { error:\n   'Length of account_number should be between 1 and 17 when bank_country_code is \\'US\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }",
                    "estack": "Error: expected { error:\n   'Length of account_number should be between 1 and 17 when bank_country_code is \\'US\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }\n    at error (node_modules/.4.0.2@supertest/lib/test.js:301:13)\n    at Test._assertBody (node_modules/.4.0.2@supertest/lib/test.js:205:14)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": " {\n-   \"error\": \"Length of account_number should be between 7 and 11 when bank_country_code is 'US'\"\n+   \"error\": \"Length of account_number should be between 1 and 17 when bank_country_code is 'US'\"\n }\n"
                  },
                  "uuid": "654b0f2f-e44e-4991-824e-d3da65561a50",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when CN and account_number 7",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when CN and account_number 7",
                  "timedOut": false,
                  "duration": 422,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 400 \"Bad Request\", got 200 \"OK\"",
                    "estack": "Error: expected 400 \"Bad Request\", got 200 \"OK\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:716:12)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "abae0517-59d1-465e-9d07-16c0fd659d20",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be message Length of account_number should be between 8 and 20 when bank_country_code is 'CN' when CN and account_number 21",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be message Length of account_number should be between 8 and 20 when bank_country_code is 'CN' when CN and account_number 21",
                  "timedOut": false,
                  "duration": 808,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected { error:\n   'Length of account_number should be between 8 and 20 when bank_country_code is \\'CN\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }",
                    "estack": "Error: expected { error:\n   'Length of account_number should be between 8 and 20 when bank_country_code is \\'CN\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }\n    at error (node_modules/.4.0.2@supertest/lib/test.js:301:13)\n    at Test._assertBody (node_modules/.4.0.2@supertest/lib/test.js:205:14)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": " {\n-   \"error\": \"Length of account_number should be between 7 and 11 when bank_country_code is 'US'\"\n+   \"error\": \"Length of account_number should be between 8 and 20 when bank_country_code is 'CN'\"\n }\n"
                  },
                  "uuid": "69f6905b-4204-4deb-83eb-871847ef0517",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when AU and bsb not 6",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when AU and bsb not 6",
                  "timedOut": false,
                  "duration": 659,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "11d8b692-4ff3-4b6c-8739-732641007e09",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be message Length of 'bsb' should be 6 when AU and bsb is ''",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be message Length of 'bsb' should be 6 when AU and bsb is ''",
                  "timedOut": false,
                  "duration": 470,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected { error: 'Length of \\'bsb\\' should be 6' } response body, got { error: '\\'bsb\\' is required when bank country code is \\'AU\\'' }",
                    "estack": "Error: expected { error: 'Length of \\'bsb\\' should be 6' } response body, got { error: '\\'bsb\\' is required when bank country code is \\'AU\\'' }\n    at error (node_modules/.4.0.2@supertest/lib/test.js:301:13)\n    at Test._assertBody (node_modules/.4.0.2@supertest/lib/test.js:205:14)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": " {\n-   \"error\": \"'bsb' is required when bank country code is 'AU'\"\n+   \"error\": \"Length of 'bsb' should be 6\"\n }\n"
                  },
                  "uuid": "8890cafd-0d0b-4339-82ea-d05f2458eb0d",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when US and aba not 9",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when US and aba not 9",
                  "timedOut": false,
                  "duration": 801,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {},
                  "uuid": "9cacba71-d91c-42df-9ac0-63ed3745a45e",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be failure when US and aba is ''",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be failure when US and aba is ''",
                  "timedOut": false,
                  "duration": 509,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected 400 \"Bad Request\", got 200 \"OK\"",
                    "estack": "Error: expected 400 \"Bad Request\", got 200 \"OK\"\n    at Test._assertStatus (node_modules/.4.0.2@supertest/lib/test.js:268:12)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:716:12)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "82e175b8-bf1c-47e8-bde2-5ebf846b8786",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be message Length of account_number should be between 6 and 9 when bank_country_code is 'AU' when AU and account_number 5",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be message Length of account_number should be between 6 and 9 when bank_country_code is 'AU' when AU and account_number 5",
                  "timedOut": false,
                  "duration": 422,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected { error:\n   'Length of account_number should be between 6 and 9 when bank_country_code is \\'AU\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }",
                    "estack": "Error: expected { error:\n   'Length of account_number should be between 6 and 9 when bank_country_code is \\'AU\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }\n    at error (node_modules/.4.0.2@supertest/lib/test.js:301:13)\n    at Test._assertBody (node_modules/.4.0.2@supertest/lib/test.js:205:14)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": " {\n-   \"error\": \"Length of account_number should be between 7 and 11 when bank_country_code is 'US'\"\n+   \"error\": \"Length of account_number should be between 6 and 9 when bank_country_code is 'AU'\"\n }\n"
                  },
                  "uuid": "3c143d37-7745-4131-9413-f328c748c277",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "post /bank should be message Length of account_number should be between 6 and 9 when bank_country_code is 'AU' when AU and account_number 10",
                  "fullTitle": "Customers Info Tests collect customers bank info tests post /bank should be message Length of account_number should be between 6 and 9 when bank_country_code is 'AU' when AU and account_number 10",
                  "timedOut": false,
                  "duration": 506,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "(0, _bank.collectCustomerBankInfo)(test.body).expect(test.expect.status_code, test.expect.body, done);",
                  "err": {
                    "message": "Error: expected { error:\n   'Length of account_number should be between 6 and 9 when bank_country_code is \\'AU\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }",
                    "estack": "Error: expected { error:\n   'Length of account_number should be between 6 and 9 when bank_country_code is \\'AU\\'' } response body, got { error:\n   'Length of account_number should be between 7 and 11 when bank_country_code is \\'US\\'' }\n    at error (node_modules/.4.0.2@supertest/lib/test.js:301:13)\n    at Test._assertBody (node_modules/.4.0.2@supertest/lib/test.js:205:14)\n    at Test._assertFunction (node_modules/.4.0.2@supertest/lib/test.js:283:11)\n    at Test.assert (node_modules/.4.0.2@supertest/lib/test.js:173:18)\n    at localAssert (node_modules/.4.0.2@supertest/lib/test.js:131:12)\n    at /Users/jibing/servicetesting/node_modules/.4.0.2@supertest/lib/test.js:128:5\n    at Test.Request.callback (node_modules/.3.8.3@superagent/lib/node/index.js:728:3)\n    at parser (node_modules/.3.8.3@superagent/lib/node/index.js:916:18)\n    at IncomingMessage.res.on (node_modules/.3.8.3@superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": " {\n-   \"error\": \"Length of account_number should be between 7 and 11 when bank_country_code is 'US'\"\n+   \"error\": \"Length of account_number should be between 6 and 9 when bank_country_code is 'AU'\"\n }\n"
                  },
                  "uuid": "64f78a90-abe3-4830-bdbd-1b2e0a0674c4",
                  "parentUUID": "b5a8a83c-3c1c-4b99-a59c-15ed1b1175ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "844071ee-ae22-4f6c-83bd-e0ae3ee4a0ca",
                "c10a9de5-d2c1-4e23-b762-0cf9cc0fb342",
                "9bdfe75d-a206-477c-a1a2-2b49642fa822",
                "c4b3075d-9a22-4943-89a7-79916a35c22c",
                "33e34a42-6343-46a3-ad65-9b19f5ffb939",
                "0de5ca1f-5578-4738-9ed4-01bfd06072e2",
                "7aa9e58f-b155-4ca6-b9e9-5970e215632e",
                "73c1c576-61aa-438a-8256-919c068e8e0f",
                "4d1c2b9b-13a7-4a22-b8db-954183a73305",
                "b1a055bf-04fa-440b-b496-eb0ef2d2afc4",
                "ce1d81bc-63f8-420e-98c8-b96fd37ed75c",
                "0a744d75-7ec4-4acd-9a33-7baa17547580",
                "55bbcfd4-00a9-4e46-b8f7-2cf53c53e4e7",
                "49532b00-da42-4df7-9205-b8e58dc0bdd5",
                "31ef4e7e-0cd9-4312-affc-cb516b84dbd6",
                "efab89da-ca72-4646-91bd-d59b20f0a698",
                "a0875924-e29f-48a2-a73d-c0f0a6f2c1a4",
                "09c288bc-3518-4527-981d-cced219893cd",
                "4fe9c916-8b31-4157-8905-1ad9c55a88fc",
                "55f5a6e0-ae58-419a-a58e-20946b3eeebb",
                "161d26c1-68d7-45d4-bf1a-c459c8fed282",
                "6bf3bc6b-37af-40e3-be42-ec4af4d47d94",
                "438f5902-2266-4179-929b-68f2a6f94847",
                "646ac867-a19b-429a-a4c2-326cc2111270",
                "0980957e-71f8-4fcf-b3ec-c1b6e219deae",
                "7bd5285f-572c-404a-b6a5-1d874e8ad5af",
                "ed46623d-b505-449d-9a7f-eab8a4271688",
                "e888ca96-4dd9-4677-ac49-db19f0508327",
                "7ebfe34a-054b-4618-b2fd-cf7b204ac679",
                "f9384911-3e44-4c70-9e2f-831dd617ce17",
                "46992450-45c2-4a9c-bce9-aca1b735a8e3",
                "be64b545-3755-4512-b986-9049bef09513",
                "11d8b692-4ff3-4b6c-8739-732641007e09",
                "9cacba71-d91c-42df-9ac0-63ed3745a45e"
              ],
              "failures": [
                "729c439e-a510-4f20-8b46-fc4e79630a57",
                "ab3756a6-b4e0-4109-8e53-99656a055331",
                "2e2e77e3-d61f-4d71-b1ac-2607ea6d2a05",
                "d66f7736-7bb9-4864-952d-80bc8782418d",
                "62923895-4db7-475c-8d23-db9954acc6dc",
                "654b0f2f-e44e-4991-824e-d3da65561a50",
                "abae0517-59d1-465e-9d07-16c0fd659d20",
                "69f6905b-4204-4deb-83eb-871847ef0517",
                "8890cafd-0d0b-4339-82ea-d05f2458eb0d",
                "82e175b8-bf1c-47e8-bde2-5ebf846b8786",
                "3c143d37-7745-4131-9413-f328c748c277",
                "64f78a90-abe3-4830-bdbd-1b2e0a0674c4"
              ],
              "pending": [],
              "skipped": [],
              "duration": 27379,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}